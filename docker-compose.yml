version: "3.8"

networks:
  laravel:
    driver: bridge

services:
  nginx:
    build:
      context: .
      dockerfile: ./.docker/nginx/Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
      - ./logs:/var/log/nginx
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: ./.docker/php/Dockerfile
    container_name: php
    restart: always
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  mysql:
    image: mariadb:10.3
    container_name: mysql
    restart: always
    tty: true
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 2000000000000
    depends_on:
      - mysql
    ports:
      - "81:80"
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: ./.docker/php/composer/Dockerfile
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: [ "composer", "--ignore-platform-reqs" ]

  npm:
    image: node:18
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "npm" ]

  artisan:
    build:
      context: .
      dockerfile: ./.docker/php/Dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    working_dir: /var/www/html
    user: laravel
    entrypoint: [ "php", "/var/www/html/artisan" ]
    networks:
      - laravel

  redis:
    image: "redis:alpine"
    container_name: redis
    restart: always
    networks:
      - laravel
